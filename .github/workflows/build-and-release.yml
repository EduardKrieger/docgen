name: CI/CD

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  setup-devonfw-ide:
    runs-on: ubuntu-latest
    steps:
      - name: download and setup IDE
        shell: bash
        run: |
          mkdir ~/.devon
          touch ~/.devon/.license.agreement
          wget -c 'https://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.devonfw.tools.ide&a=devonfw-ide-scripts&v=LATEST&p=tar.gz' -O - | tar -xz && bash setup -

  build:
    needs: [setup-devonfw-ide]
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2

      - run: devon mvn install

  release:
      needs: [build]
      runs-on: ubuntu-latest
      if: ${{ startsWith(github.repository, 'devonfw/') && github.ref == 'refs/heads/master' }}
      continue-on-error: true
      environment:
        name: production
      outputs:
        release_tag: ${{ steps.get_tag.outputs.tagname }}
      steps:
        - name: Release
          id: release
          shell: bash
          env:
            GPG_KEY: ${{ secrets.GPG_KEY }}
            GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
            SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
            SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
            BUILD_USER: ${{ secrets.BUILD_USER }}
            BUILD_USER_PASSWD: ${{ secrets.BUILD_USER_PASSWD }}
            BUILD_USER_EMAIL: ${{ secrets.BUILD_USER_EMAIL }}
          run: devon release -f

        - name: 'Get release tag'
          id: get_tag
          uses: "WyriHaximus/github-action-get-previous-tag@v1"
          env:
            GITHUB_TOKEN: "${{ secrets.GHA_TOKEN }}"

  github-release:
    needs: release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.repository, 'devonfw/') && github.ref == 'refs/heads/master' && needs.release.outputs.release_tag != '' }}
    steps:
      - uses: devonfw-actions/create-github-release@v1
        with:
          release_tag: ${{ needs.release.outputs.released_tag }}
          GHA_TOKEN: ${{ secrets.GHA_TOKEN }}
