name: CI/CD

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: devonfw-actions/java-maven-setup@v5
        with:
          maven-cache-key: dep-${{ hashFiles('**/pom.xml') }}

      - name: Build & Test
        run: mvn install

  release:
      needs: [build]
      runs-on: ubuntu-latest
      if: ${{ startsWith(github.repository, 'devonfw/') && github.ref == 'refs/heads/master' }}
      continue-on-error: true
      environment:
        name: production
      outputs:
        release_tag: ${{ steps.get_tag.outputs.tagname }}
        released: ${{ steps.push_release.outputs.released }}
      steps:        
        - uses: devonfw-actions/java-maven-setup@v5
          with:
            repository_path: workspaces/main/docgen
            maven-cache-key: dep-${{ hashFiles('**/pom.xml') }}
            GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
            GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
            BUILD_USER: ${{ secrets.BUILD_USER }}
            BUILD_USER_PASSWD: ${{ secrets.BUILD_USER_PASSWD }}
            BUILD_USER_EMAIL: ${{ secrets.BUILD_USER_EMAIL }}
            
        - name: Release
          id: release
          shell: bash
          env:
            GPG_KEY: ${{ secrets.GPG_KEY }}
            GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
            SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
            SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
            BUILD_USER: ${{ secrets.BUILD_USER }}
            BUILD_USER_PASSWD: ${{ secrets.BUILD_USER_PASSWD }}
            BUILD_USER_EMAIL: ${{ secrets.BUILD_USER_EMAIL }}
          run: |
            mkdir ~/.devon
            touch ~/.devon/.license.agreement
            wget -c 'https://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.devonfw.tools.ide&a=devonfw-ide-scripts&v=LATEST&p=tar.gz' -O - | tar -xz && bash setup -
            DEVON_CLI="${PWD}/scripts/devon"
            cd workspaces/main/docgen
            \cp .mvn/settings.xml ../../../conf/.m2/settings.xml
            $DEVON_CLI release -f
        
        - name: Get Release Tag
          id: get_tag
          shell: bash
          run: |
            cd workspaces/main/docgen
            
            # Get tag name
            SECOND_LAST_COMMIT_HASH=`git rev-parse @~`
            TAG_NAME=`git describe --tags ${SECOND_LAST_COMMIT_HASH}`
            # Strip leading spaces.
            while [[ $TAG_NAME == ' '* ]]; do
               TAG_NAME="${TAG_NAME## }"
            done
            # Strip trailing spaces.
            while [[ $TAG_NAME == *' ' ]]; do
                TAG_NAME="${TAG_NAME%% }"
            done

            echo "::set-output name=tagname::${TAG_NAME}"
          
        - name: Push Sonatype Release
          shell: bash
          id: push_release
          run: |
            set -e
            cd workspaces/main/docgen
            $DEVON_CLI mvn -Pdocgen-autodeploy nexus-staging:release -s .mvn/settings.xml
            echo "::set-output name=released::true"
          
        - name: Drop Sonatype Release
          if: ${{ failure() }}
          shell: bash
          run: |
            cd workspaces/main/docgen
            $DEVON_CLI mvn -Pdocgen-autodeploy nexus-staging:drop -s .mvn/settings.xml

  github-release:
    needs: release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.repository, 'devonfw/') && github.ref == 'refs/heads/master' && needs.release.outputs.released == 'true' }}
    steps:
      - uses: devonfw-actions/create-github-release@v2
        with:
          release_version: ${{ needs.release.outputs.release_tag }}
          GHA_TOKEN: ${{ secrets.GHA_TOKEN }}
  
  apply-to-website:
    needs: release
    runs-on: ubuntu-latest
    environment:
      name: devonfw.com
    if: ${{ startsWith(github.repository, 'devonfw/') && github.ref == 'refs/heads/master' && needs.release.outputs.released == 'true' }}
    steps:
      - name: Clone Repository
        uses: devonfw-actions/java-maven-setup@v7
        with:
          repository: 'devonfw/devonfw.github.io'
          GIT_TOKEN: ${{ secrets.GHA_TOKEN }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          BUILD_USER: ${{ secrets.BUILD_USER }}
          BUILD_USER_PASSWD: ${{ secrets.BUILD_USER_PASSWD }}
          BUILD_USER_EMAIL: ${{ secrets.BUILD_USER_EMAIL }}
          
      - name: Setup Perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: '5.34'

      - name: Apply new version to devonfw.com
        run: |
          find . -type f -name 'pom.xml' | xargs perl -0777 -pi -e 's|(<groupId>com.devonfw.tools</groupId>\s*<artifactId>devonfw-docgen[^<]*</artifactId>\s*<version>)[^<]+(</version>)|${1}${{ needs.release.outputs.release_tag }}$2|g'
          git add -u
          git commit -m"Update docgen to latest version"
          git push

      - name: Dispatch Website Repository
        uses: guilouro/multiple-repositories-dispatch@v1.0.0
        with:
          repo_token: ${{ secrets.GHA_TOKEN }}
          event_type: dispatch-build-website
          repositories: |
            devonfw/devonfw.github.io
            
  apply-to-guide:
    needs: release
    runs-on: ubuntu-latest
    environment:
      name: devonfw.com
    if: ${{ startsWith(github.repository, 'devonfw/') && github.ref == 'refs/heads/master' && needs.release.outputs.released == 'true' }}
    steps:
      - name: Clone Repository
        uses: devonfw-actions/java-maven-setup@v7
        with:
          repository: 'devonfw/devonfw-guide'
          GIT_TOKEN: ${{ secrets.GHA_TOKEN }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          BUILD_USER: ${{ secrets.BUILD_USER }}
          BUILD_USER_PASSWD: ${{ secrets.BUILD_USER_PASSWD }}
          BUILD_USER_EMAIL: ${{ secrets.BUILD_USER_EMAIL }}
          
      - name: Setup Perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: '5.34'

      - name: Apply new version to devonfw.com
        run: |
          find . -type f -name 'pom.xml' | xargs perl -0777 -pi -e 's|(<groupId>com.devonfw.tools</groupId>\s*<artifactId>devonfw-docgen[^<]*</artifactId>\s*<version>)[^<]+(</version>)|${1}${{ needs.release.outputs.release_tag }}$2|g'
          git add -u
          git commit -m"Update docgen to latest version"
          git push

      - name: Dispatch Website Repository
        uses: guilouro/multiple-repositories-dispatch@v1.0.0
        with:
          repo_token: ${{ secrets.GHA_TOKEN }}
          event_type: dispatch-build-website
          repositories: |
            devonfw/devonfw-guide
